{"ast":null,"code":"var _jsxFileName = \"/home/dev/Desktop/Vishvas/react projects/react-project05/src/App.js\";\nimport React, { useState } from \"react\";\nimport MoviesList from \"./components/MoviesList\";\nimport \"./App.css\";\nfunction App() {\n  const [movies, setMovies] = useState([]);\n  const [isLoading, setIsLoading] = useState(false);\n  const [isLoadingData, setIsLoadingData] = useState('Loading.');\n  if (isLoading) {\n    setTimeout(() => {\n      setIsLoadingData(Loading);\n    }, 1000);\n  }\n  async function fetchHandler() {\n    setIsLoading(true);\n    const response = await fetch(\"https://swapi.dev/api/films/\");\n    const data = await response.json();\n    const transformedMovies = data.results.map(movieData => {\n      return {\n        id: movieData.episode_id,\n        title: movieData.title,\n        release: movieData.release_date,\n        openingText: movieData.opening_crawl\n      };\n    });\n    setMovies(transformedMovies);\n    setIsLoading(false);\n    console.log(\"clicked\");\n  }\n  return /*#__PURE__*/React.createElement(React.Fragment, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"section\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"button\", {\n    onClick: fetchHandler,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 9\n    }\n  }, \"Fetch Movies\")), /*#__PURE__*/React.createElement(\"section\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 7\n    }\n  }, !isLoading && /*#__PURE__*/React.createElement(MoviesList, {\n    movies: movies,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 22\n    }\n  }), isLoading && /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 23\n    }\n  }, \"Loading...\")));\n}\nexport default App;","map":{"version":3,"names":["React","useState","MoviesList","App","movies","setMovies","isLoading","setIsLoading","isLoadingData","setIsLoadingData","setTimeout","Loading","fetchHandler","response","fetch","data","json","transformedMovies","results","map","movieData","id","episode_id","title","release","release_date","openingText","opening_crawl","console","log","createElement","Fragment","__self","__source","fileName","_jsxFileName","lineNumber","columnNumber","onClick"],"sources":["/home/dev/Desktop/Vishvas/react projects/react-project05/src/App.js"],"sourcesContent":["import React, { useState } from \"react\";\n\nimport MoviesList from \"./components/MoviesList\";\nimport \"./App.css\";\n\nfunction App() {\n  const [movies, setMovies] = useState([]);\n  const [isLoading,setIsLoading]=useState(false)\n  const [isLoadingData,setIsLoadingData]=useState('Loading.')\n  if (isLoading){\n    setTimeout(()=>{setIsLoadingData(Loading)},1000)\n  }\n  async function fetchHandler() {\n    setIsLoading(true)\n    const response = await fetch(\"https://swapi.dev/api/films/\");\n    const data = await response.json();\n\n    const transformedMovies = data.results.map((movieData) => {\n      return {\n        id: movieData.episode_id,\n        title: movieData.title,\n        release: movieData.release_date,\n        openingText: movieData.opening_crawl,\n      };\n    });\n    setMovies(transformedMovies);\n    setIsLoading(false)\n    console.log(\"clicked\");\n  }\n\n  return (\n    <React.Fragment>\n      <section>\n        <button onClick={fetchHandler}>Fetch Movies</button>\n      </section>\n      <section>\n        {!isLoading&&<MoviesList movies={movies} />}\n        {isLoading && <p>Loading...</p>}\n      </section>\n    </React.Fragment>\n  );\n}\n\nexport default App;\n"],"mappings":";AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AAEvC,OAAOC,UAAU,MAAM,yBAAyB;AAChD,OAAO,WAAW;AAElB,SAASC,GAAGA,CAAA,EAAG;EACb,MAAM,CAACC,MAAM,EAAEC,SAAS,CAAC,GAAGJ,QAAQ,CAAC,EAAE,CAAC;EACxC,MAAM,CAACK,SAAS,EAACC,YAAY,CAAC,GAACN,QAAQ,CAAC,KAAK,CAAC;EAC9C,MAAM,CAACO,aAAa,EAACC,gBAAgB,CAAC,GAACR,QAAQ,CAAC,UAAU,CAAC;EAC3D,IAAIK,SAAS,EAAC;IACZI,UAAU,CAAC,MAAI;MAACD,gBAAgB,CAACE,OAAO,CAAC;IAAA,CAAC,EAAC,IAAI,CAAC;EAClD;EACA,eAAeC,YAAYA,CAAA,EAAG;IAC5BL,YAAY,CAAC,IAAI,CAAC;IAClB,MAAMM,QAAQ,GAAG,MAAMC,KAAK,CAAC,8BAA8B,CAAC;IAC5D,MAAMC,IAAI,GAAG,MAAMF,QAAQ,CAACG,IAAI,EAAE;IAElC,MAAMC,iBAAiB,GAAGF,IAAI,CAACG,OAAO,CAACC,GAAG,CAAEC,SAAS,IAAK;MACxD,OAAO;QACLC,EAAE,EAAED,SAAS,CAACE,UAAU;QACxBC,KAAK,EAAEH,SAAS,CAACG,KAAK;QACtBC,OAAO,EAAEJ,SAAS,CAACK,YAAY;QAC/BC,WAAW,EAAEN,SAAS,CAACO;MACzB,CAAC;IACH,CAAC,CAAC;IACFtB,SAAS,CAACY,iBAAiB,CAAC;IAC5BV,YAAY,CAAC,KAAK,CAAC;IACnBqB,OAAO,CAACC,GAAG,CAAC,SAAS,CAAC;EACxB;EAEA,oBACE7B,KAAA,CAAA8B,aAAA,CAAC9B,KAAK,CAAC+B,QAAQ;IAAAC,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,gBACbrC,KAAA,CAAA8B,aAAA;IAAAE,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,gBACErC,KAAA,CAAA8B,aAAA;IAAQQ,OAAO,EAAE1B,YAAa;IAAAoB,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,GAAC,cAAY,CAAS,CAC5C,eACVrC,KAAA,CAAA8B,aAAA;IAAAE,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,GACG,CAAC/B,SAAS,iBAAEN,KAAA,CAAA8B,aAAA,CAAC5B,UAAU;IAACE,MAAM,EAAEA,MAAO;IAAA4B,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,EAAG,EAC1C/B,SAAS,iBAAIN,KAAA,CAAA8B,aAAA;IAAAE,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,GAAG,YAAU,CAAI,CACvB,CACK;AAErB;AAEA,eAAelC,GAAG"},"metadata":{},"sourceType":"module"}